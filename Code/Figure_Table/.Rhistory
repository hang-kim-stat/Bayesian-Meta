Table4_number = array(NA,c(16,3))
colnames(Table4_number) = c("Bias","MSE","Coverage")
for (i_method in 1:4){
SEQ1 = c(0,4,8,12)+i_method
SEQ2 = (3:5)+(i_method-1)*4
tempDataFrame = Table4[1:4,SEQ2]
tempVector = as.numeric(as.matrix(tempDataFrame))
Table4_number[SEQ1,] = matrix(tempVector, nrow = nrow(tempDataFrame), ncol = ncol(tempDataFrame))
}
Table4_figure <- data.frame(Method = Table4_label[,"Method"], Parameter = Table4_label[,"Parameter"], Bias = Table4_number[,"Bias"], MSE = Table4_number[,"MSE"], Coverage = Table4_number[,"Coverage"], stringsAsFactors = FALSE)
# Set the order of the Method variable
Table4_figure[,"Method"] <- factor(Table4_figure[,"Method"], levels = c("Benchmark", "IPD-AD", "IPD-AD(pooled)", "IPD only"), labels = c("Bench\nmark", "IPD-AD", "IPD-AD\n(pooled)", "IPD\nonly") )
# Plot for Bias with legend
plot_bias1 <- ggplot(Table4_figure, aes(x = Method, y = Bias, shape = Parameter, color = Parameter)) +
geom_point(size = 5) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
labs(title = "Bias", x = "", y = "Bias") +
scale_shape_manual(values = c(1, 2, 15, 4), labels = greek_labels) +
scale_color_manual(values = c("blue", "brown", "red", "purple"), labels = greek_labels) +
scale_y_continuous(limits = c(-0.1, 0.1), labels = number_format(accuracy = 0.01)) +
theme(
plot.title = element_text(size = SIZE_title, face = "bold", hjust = 0.5, margin = margin(b = SIZE_b)),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = SIZE_text.x),
axis.text.y = element_text(size = SIZE_text.y),
legend.position = "none"
)
# Plot for MSE with connecting lines, without legend, and with adjusted text size
plot_mse1 <- ggplot(Table4_figure, aes(x = Method, y = MSE, group = Parameter, shape = Parameter, color = Parameter)) +
geom_point(size = 5) +
geom_line(linetype = "dashed") +
labs(title = "MSE", x = "", y = "MSE") +
scale_shape_manual(values = c(1, 2, 15, 4), labels = greek_labels) +
scale_color_manual(values = c("blue", "brown", "red", "purple"), labels = greek_labels) +
scale_y_continuous(limits = c(0, 0.13)) +
theme(
plot.title = element_text(size = SIZE_title, face = "bold", hjust = 0.5, margin = margin(b = SIZE_b)),
legend.position = "none",
axis.title.x = element_blank(),
# axis.title.y = element_text(size = 24, face = "bold", margin = margin(r = 20)),
axis.title.y = element_blank(),
axis.text.x = element_text(size = SIZE_text.x),
axis.text.y = element_text(size = SIZE_text.y),
legend.text = element_text(size = 16)
)
# Plot for 95% Coverage without legend and with adjusted text size
plot_95cover1 <- ggplot(Table4_figure, aes(x = Method, y = Coverage, shape = Parameter, color = Parameter)) +
geom_point(size = 5) +
geom_hline(yintercept = 0.95, linetype = "dashed", color = "black") +
labs(title = "95% C.I. Coverage", x = "", y = "95% C.I. Coverage") +
scale_shape_manual(values = c(1, 2, 15, 4), labels = greek_labels) +
scale_color_manual(values = c("blue", "brown", "red", "purple"), labels = greek_labels) +
scale_y_continuous(limits = c(0.9, 1.0), labels = number_format(accuracy = 0.01)) +
theme(
plot.title = element_text(size = SIZE_title, face = "bold", hjust = 0.5, margin = margin(b = SIZE_b)),
axis.title.x = element_blank(),
# axis.title.y = element_text(size = 24, face = "bold", margin = margin(r = 20)),
axis.title.y = element_blank(),
axis.text.x = element_text(size = SIZE_text.x),
axis.text.y = element_text(size = SIZE_text.y),
legend.position = "none"
)
##############################################################################
# Load the results of 2nd simulation
Table5 = read.csv("../../Output/Figure_Table/Supplement_Table5.csv")
Table5_label = array(NA,c(16,2))
colnames(Table5_label) = c("Method","Parameter")
Table5_label[,1] = rep(c("Benchmark","IPD-AD","IPD-AD(pooled)","IPD only"),4)
Table5_label[,2] = rep(c("mu1","mu2","mu3","mu4"),each=4)
Table5_number = array(NA,c(16,3))
colnames(Table5_number) = c("Bias","MSE","Coverage")
for (i_method in 1:4){
SEQ1 = c(0,4,8,12)+i_method
SEQ2 = (3:5)+(i_method-1)*4
tempDataFrame = Table5[1:4,SEQ2]
tempVector = as.numeric(as.matrix(tempDataFrame))
Table5_number[SEQ1,] = matrix(tempVector, nrow = nrow(tempDataFrame), ncol = ncol(tempDataFrame))
}
Table5_figure <- data.frame(Method = Table5_label[,"Method"], Parameter = Table5_label[,"Parameter"], Bias = Table5_number[,"Bias"], MSE = Table5_number[,"MSE"], Coverage = Table5_number[,"Coverage"], stringsAsFactors = FALSE)
# Set the order of the Method variable
Table5_figure[,"Method"] <- factor(Table5_figure[,"Method"], levels = c("Benchmark", "IPD-AD", "IPD-AD(pooled)", "IPD only"), labels = c("Bench\nmark", "IPD-AD", "IPD-AD\n(pooled)", "IPD\nonly") )
# Plot for Bias
plot_bias2 <- ggplot(Table5_figure, aes(x = Method, y = Bias, shape = Parameter, color = Parameter)) +
geom_point(size = 5) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
labs(x = "", y = "Bias") +
scale_shape_manual(values = c(1, 2, 15, 4), labels = greek_labels) +
scale_color_manual(values = c("blue", "brown", "red", "purple"), labels = greek_labels) +
scale_y_continuous(limits = c(-0.1, 0.1), labels = number_format(accuracy = 0.01)) +
theme(
legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = SIZE_text.x),
axis.text.y = element_text(size = SIZE_text.y),
legend.text = element_text(size = 16)
)
# Plot for MSE with connecting lines, without legend, and with adjusted text size
plot_mse2 <- ggplot(Table5_figure, aes(x = Method, y = MSE, group = Parameter, shape = Parameter, color = Parameter)) +
geom_point(size = 5) +
geom_line(linetype = "dashed") +
labs(title = "", x = "", y = "MSE") +
scale_shape_manual(values = c(1, 2, 15, 4), labels = greek_labels) +
scale_color_manual(values = c("blue", "brown", "red", "purple"), labels = greek_labels) +
scale_y_continuous(limits = c(0, 0.018), labels = number_format(accuracy = 0.01)) +
theme(
legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = SIZE_text.x),
axis.text.y = element_text(size = SIZE_text.y),
legend.text = element_text(size = 16)
)
# Plot for 95% Coverage without legend and with adjusted text size
plot_95cover2 <- ggplot(Table5_figure, aes(x = Method, y = Coverage, shape = Parameter, color = Parameter)) +
geom_point(size = 5) +
geom_hline(yintercept = 0.95, linetype = "dashed", color = "black") +
labs(x = "", y = "95% C.I. Coverage") +
scale_shape_manual(values = c(1, 2, 15, 4), labels = greek_labels) +
scale_color_manual(values = c("blue", "brown", "red", "purple"), labels = greek_labels) +
scale_y_continuous(limits = c(0.87, 1.0)) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = SIZE_text.x),
axis.text.y = element_text(size = SIZE_text.y),
legend.position = "none"
)
##############################################################################
# Combine the plots side by side
combined_plot <- plot_bias1 + plot_mse1 + plot_95cover1 + plot_bias2 + plot_mse2 +  plot_95cover2 + plot_layout(nrow = 2, ncol = 3)
# Store figure in .png file
ggsave("../../Output/Figure_Table/Maintext_Figure3.png", plot = combined_plot, width = 16, height = 8, dpi = 300)
rm(list=ls())
# Load necessary libraries
library(ggplot2)
library(patchwork) # For arranging plots side by side
library(dplyr)
library(tidyr)
library(scales)
# Graphical options
SIZE_title.y = 18 ; SIZE_title.x = 16 ; SIZE_text.y = 16 ; SIZE_text.x = 18 ; SIZE_title = 22 ; SIZE_b = 10 # Set text size
greek_labels <- c(expression(mu[0]), expression(mu[1]), expression(mu[2]), expression(mu[12])) # Define Greek labels for the legend
##############################################################################
# Load the results of 1st simulation
Table4 = read.csv("../../Output/Figure_Table/Supplement_Table4.csv")
Table4_label = array(NA,c(16,2))
colnames(Table4_label) = c("Method","Parameter")
Table4_label[,1] = rep(c("Benchmark","IPD-AD","IPD-AD(pooled)","IPD only"),4)
Table4_label[,2] = rep(c("mu1","mu2","mu3","mu4"),each=4)
Table4_number = array(NA,c(16,3))
colnames(Table4_number) = c("Bias","MSE","Coverage")
for (i_method in 1:4){
SEQ1 = c(0,4,8,12)+i_method
SEQ2 = (3:5)+(i_method-1)*4
tempDataFrame = Table4[1:4,SEQ2]
tempVector = as.numeric(as.matrix(tempDataFrame))
Table4_number[SEQ1,] = matrix(tempVector, nrow = nrow(tempDataFrame), ncol = ncol(tempDataFrame))
}
Table4_figure <- data.frame(Method = Table4_label[,"Method"], Parameter = Table4_label[,"Parameter"], Bias = Table4_number[,"Bias"], MSE = Table4_number[,"MSE"], Coverage = Table4_number[,"Coverage"], stringsAsFactors = FALSE)
# Set the order of the Method variable
Table4_figure[,"Method"] <- factor(Table4_figure[,"Method"], levels = c("Benchmark", "IPD-AD", "IPD-AD(pooled)", "IPD only"), labels = c("Bench\nmark", "IPD-AD", "IPD-AD\n(pooled)", "IPD\nonly") )
# Plot for Bias
plot_bias1 <- ggplot(Table4_figure, aes(x = Method, y = Bias, shape = Parameter, color = Parameter)) +
geom_point(size = 5) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
labs(title = "Bias", x = "", y = "Bias") +
scale_shape_manual(values = c(1, 2, 15, 4), labels = greek_labels) +
scale_color_manual(values = c("blue", "brown", "red", "purple"), labels = greek_labels) +
scale_y_continuous(limits = c(-0.1, 0.1), labels = number_format(accuracy = 0.01)) +
theme(
plot.title = element_text(size = SIZE_title, face = "bold", hjust = 0.5, margin = margin(b = SIZE_b)),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = SIZE_text.x),
axis.text.y = element_text(size = SIZE_text.y),
legend.position = "none"
)
# Plot for MSE
plot_mse1 <- ggplot(Table4_figure, aes(x = Method, y = MSE, group = Parameter, shape = Parameter, color = Parameter)) +
geom_point(size = 5) +
geom_line(linetype = "dashed") +
labs(title = "MSE", x = "", y = "MSE") +
scale_shape_manual(values = c(1, 2, 15, 4), labels = greek_labels) +
scale_color_manual(values = c("blue", "brown", "red", "purple"), labels = greek_labels) +
scale_y_continuous(limits = c(0, 0.13)) +
theme(
plot.title = element_text(size = SIZE_title, face = "bold", hjust = 0.5, margin = margin(b = SIZE_b)),
legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = SIZE_text.x),
axis.text.y = element_text(size = SIZE_text.y),
legend.text = element_text(size = 16)
)
# Plot for 95% Coverage
plot_95cover1 <- ggplot(Table4_figure, aes(x = Method, y = Coverage, shape = Parameter, color = Parameter)) +
geom_point(size = 5) +
geom_hline(yintercept = 0.95, linetype = "dashed", color = "black") +
labs(title = "95% C.I. Coverage", x = "", y = "95% C.I. Coverage") +
scale_shape_manual(values = c(1, 2, 15, 4), labels = greek_labels) +
scale_color_manual(values = c("blue", "brown", "red", "purple"), labels = greek_labels) +
scale_y_continuous(limits = c(0.9, 1.0), labels = number_format(accuracy = 0.01)) +
theme(
plot.title = element_text(size = SIZE_title, face = "bold", hjust = 0.5, margin = margin(b = SIZE_b)),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = SIZE_text.x),
axis.text.y = element_text(size = SIZE_text.y),
legend.position = "none"
)
##############################################################################
# Load the results of 2nd simulation
Table5 = read.csv("../../Output/Figure_Table/Supplement_Table5.csv")
Table5_label = array(NA,c(16,2))
colnames(Table5_label) = c("Method","Parameter")
Table5_label[,1] = rep(c("Benchmark","IPD-AD","IPD-AD(pooled)","IPD only"),4)
Table5_label[,2] = rep(c("mu1","mu2","mu3","mu4"),each=4)
Table5_number = array(NA,c(16,3))
colnames(Table5_number) = c("Bias","MSE","Coverage")
for (i_method in 1:4){
SEQ1 = c(0,4,8,12)+i_method
SEQ2 = (3:5)+(i_method-1)*4
tempDataFrame = Table5[1:4,SEQ2]
tempVector = as.numeric(as.matrix(tempDataFrame))
Table5_number[SEQ1,] = matrix(tempVector, nrow = nrow(tempDataFrame), ncol = ncol(tempDataFrame))
}
Table5_figure <- data.frame(Method = Table5_label[,"Method"], Parameter = Table5_label[,"Parameter"], Bias = Table5_number[,"Bias"], MSE = Table5_number[,"MSE"], Coverage = Table5_number[,"Coverage"], stringsAsFactors = FALSE)
# Set the order of the Method variable
Table5_figure[,"Method"] <- factor(Table5_figure[,"Method"], levels = c("Benchmark", "IPD-AD", "IPD-AD(pooled)", "IPD only"), labels = c("Bench\nmark", "IPD-AD", "IPD-AD\n(pooled)", "IPD\nonly") )
# Plot for Bias
plot_bias2 <- ggplot(Table5_figure, aes(x = Method, y = Bias, shape = Parameter, color = Parameter)) +
geom_point(size = 5) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
labs(x = "", y = "Bias") +
scale_shape_manual(values = c(1, 2, 15, 4), labels = greek_labels) +
scale_color_manual(values = c("blue", "brown", "red", "purple"), labels = greek_labels) +
scale_y_continuous(limits = c(-0.1, 0.1), labels = number_format(accuracy = 0.01)) +
theme(
legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = SIZE_text.x),
axis.text.y = element_text(size = SIZE_text.y),
legend.text = element_text(size = 16)
)
# Plot for MSE
plot_mse2 <- ggplot(Table5_figure, aes(x = Method, y = MSE, group = Parameter, shape = Parameter, color = Parameter)) +
geom_point(size = 5) +
geom_line(linetype = "dashed") +
labs(title = "", x = "", y = "MSE") +
scale_shape_manual(values = c(1, 2, 15, 4), labels = greek_labels) +
scale_color_manual(values = c("blue", "brown", "red", "purple"), labels = greek_labels) +
scale_y_continuous(limits = c(0, 0.018), labels = number_format(accuracy = 0.01)) +
theme(
legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = SIZE_text.x),
axis.text.y = element_text(size = SIZE_text.y),
legend.text = element_text(size = 16)
)
# Plot for 95% Coverage
plot_95cover2 <- ggplot(Table5_figure, aes(x = Method, y = Coverage, shape = Parameter, color = Parameter)) +
geom_point(size = 5) +
geom_hline(yintercept = 0.95, linetype = "dashed", color = "black") +
labs(x = "", y = "95% C.I. Coverage") +
scale_shape_manual(values = c(1, 2, 15, 4), labels = greek_labels) +
scale_color_manual(values = c("blue", "brown", "red", "purple"), labels = greek_labels) +
scale_y_continuous(limits = c(0.87, 1.0)) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = SIZE_text.x),
axis.text.y = element_text(size = SIZE_text.y),
legend.position = "none"
)
##############################################################################
# Combine the plots side by side
combined_plot <- plot_bias1 + plot_mse1 + plot_95cover1 + plot_bias2 + plot_mse2 +  plot_95cover2 + plot_layout(nrow = 2, ncol = 3)
# Store figure in .png file
ggsave("../../Output/Figure_Table/Maintext_Figure3.png", plot = combined_plot, width = 16, height = 8, dpi = 300)
rm(list=ls())
# Load necessary libraries
library(ggplot2)
library(patchwork) # For arranging plots side by side
library(dplyr)
library(tidyr)
library(scales)
# Graphical options
SIZE_title.y = 18 ; SIZE_title.x = 16 ; SIZE_text.y = 16 ; SIZE_text.x = 18 ; SIZE_title = 22 ; SIZE_b = 10 # Set text size
greek_labels <- c(expression(mu[0]), expression(mu[1]), expression(mu[2]), expression(mu[12])) # Define Greek labels for the legend
##############################################################################
# Load the results of 1st simulation
Table4 = read.csv("../../Output/Figure_Table/Supplement_Table4.csv")
Table4_label = array(NA,c(16,2))
colnames(Table4_label) = c("Method","Parameter")
Table4_label[,1] = rep(c("Benchmark","IPD-AD","IPD-AD(pooled)","IPD only"),4)
Table4_label[,2] = rep(c("mu1","mu2","mu3","mu4"),each=4)
Table4_number = array(NA,c(16,3))
colnames(Table4_number) = c("Bias","MSE","Coverage")
for (i_method in 1:4){
SEQ1 = c(0,4,8,12)+i_method
SEQ2 = (3:5)+(i_method-1)*4
tempDataFrame = Table4[1:4,SEQ2]
tempVector = as.numeric(as.matrix(tempDataFrame))
Table4_number[SEQ1,] = matrix(tempVector, nrow = nrow(tempDataFrame), ncol = ncol(tempDataFrame))
}
Table4_figure <- data.frame(Method = Table4_label[,"Method"], Parameter = Table4_label[,"Parameter"], Bias = Table4_number[,"Bias"], MSE = Table4_number[,"MSE"], Coverage = Table4_number[,"Coverage"], stringsAsFactors = FALSE)
# Set the order of the Method variable
Table4_figure[,"Method"] <- factor(Table4_figure[,"Method"], levels = c("Benchmark", "IPD-AD", "IPD-AD(pooled)", "IPD only"), labels = c("Bench\nmark", "IPD-AD", "IPD-AD\n(pooled)", "IPD\nonly") )
# Plot for Bias
plot_bias1 <- ggplot(Table4_figure, aes(x = Method, y = Bias, shape = Parameter, color = Parameter)) +
geom_point(size = 5) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
labs(title = "Bias", x = "", y = "Bias") +
scale_shape_manual(values = c(1, 2, 15, 4), labels = greek_labels) +
scale_color_manual(values = c("blue", "brown", "red", "purple"), labels = greek_labels) +
scale_y_continuous(limits = c(-0.1, 0.1), labels = number_format(accuracy = 0.01)) +
theme(
plot.title = element_text(size = SIZE_title, face = "bold", hjust = 0.5, margin = margin(b = SIZE_b)),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = SIZE_text.x),
axis.text.y = element_text(size = SIZE_text.y),
legend.position = "none"
)
# Plot for MSE
plot_mse1 <- ggplot(Table4_figure, aes(x = Method, y = MSE, group = Parameter, shape = Parameter, color = Parameter)) +
geom_point(size = 5) +
geom_line(linetype = "dashed") +
labs(title = "MSE", x = "", y = "MSE") +
scale_shape_manual(values = c(1, 2, 15, 4), labels = greek_labels) +
scale_color_manual(values = c("blue", "brown", "red", "purple"), labels = greek_labels) +
scale_y_continuous(limits = c(0, 0.13)) +
theme(
plot.title = element_text(size = SIZE_title, face = "bold", hjust = 0.5, margin = margin(b = SIZE_b)),
legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = SIZE_text.x),
axis.text.y = element_text(size = SIZE_text.y),
legend.text = element_text(size = 16)
)
# Plot for 95% Coverage
plot_95cover1 <- ggplot(Table4_figure, aes(x = Method, y = Coverage, shape = Parameter, color = Parameter)) +
geom_point(size = 5) +
geom_hline(yintercept = 0.95, linetype = "dashed", color = "black") +
labs(title = "95% C.I. Coverage", x = "", y = "95% C.I. Coverage") +
scale_shape_manual(values = c(1, 2, 15, 4), labels = greek_labels) +
scale_color_manual(values = c("blue", "brown", "red", "purple"), labels = greek_labels) +
scale_y_continuous(limits = c(0.9, 1.0), labels = number_format(accuracy = 0.01)) +
theme(
plot.title = element_text(size = SIZE_title, face = "bold", hjust = 0.5, margin = margin(b = SIZE_b)),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = SIZE_text.x),
axis.text.y = element_text(size = SIZE_text.y),
legend.position = "none"
)
##############################################################################
# Load the results of 2nd simulation
Table5 = read.csv("../../Output/Figure_Table/Supplement_Table5.csv")
Table5_label = array(NA,c(16,2))
colnames(Table5_label) = c("Method","Parameter")
Table5_label[,1] = rep(c("Benchmark","IPD-AD","IPD-AD(pooled)","IPD only"),4)
Table5_label[,2] = rep(c("mu1","mu2","mu3","mu4"),each=4)
Table5_number = array(NA,c(16,3))
colnames(Table5_number) = c("Bias","MSE","Coverage")
for (i_method in 1:4){
SEQ1 = c(0,4,8,12)+i_method
SEQ2 = (3:5)+(i_method-1)*4
tempDataFrame = Table5[1:4,SEQ2]
tempVector = as.numeric(as.matrix(tempDataFrame))
Table5_number[SEQ1,] = matrix(tempVector, nrow = nrow(tempDataFrame), ncol = ncol(tempDataFrame))
}
Table5_figure <- data.frame(Method = Table5_label[,"Method"], Parameter = Table5_label[,"Parameter"], Bias = Table5_number[,"Bias"], MSE = Table5_number[,"MSE"], Coverage = Table5_number[,"Coverage"], stringsAsFactors = FALSE)
# Set the order of the Method variable
Table5_figure[,"Method"] <- factor(Table5_figure[,"Method"], levels = c("Benchmark", "IPD-AD", "IPD-AD(pooled)", "IPD only"), labels = c("Bench\nmark", "IPD-AD", "IPD-AD\n(pooled)", "IPD\nonly") )
# Plot for Bias
plot_bias2 <- ggplot(Table5_figure, aes(x = Method, y = Bias, shape = Parameter, color = Parameter)) +
geom_point(size = 5) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
labs(x = "", y = "Bias") +
scale_shape_manual(values = c(1, 2, 15, 4), labels = greek_labels) +
scale_color_manual(values = c("blue", "brown", "red", "purple"), labels = greek_labels) +
scale_y_continuous(limits = c(-0.1, 0.1), labels = number_format(accuracy = 0.01)) +
theme(
legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = SIZE_text.x),
axis.text.y = element_text(size = SIZE_text.y),
legend.text = element_text(size = 16)
)
# Plot for MSE
plot_mse2 <- ggplot(Table5_figure, aes(x = Method, y = MSE, group = Parameter, shape = Parameter, color = Parameter)) +
geom_point(size = 5) +
geom_line(linetype = "dashed") +
labs(title = "", x = "", y = "MSE") +
scale_shape_manual(values = c(1, 2, 15, 4), labels = greek_labels) +
scale_color_manual(values = c("blue", "brown", "red", "purple"), labels = greek_labels) +
scale_y_continuous(limits = c(0, 0.018), labels = number_format(accuracy = 0.01)) +
theme(
legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = SIZE_text.x),
axis.text.y = element_text(size = SIZE_text.y),
legend.text = element_text(size = 16)
)
# Plot for 95% Coverage
plot_95cover2 <- ggplot(Table5_figure, aes(x = Method, y = Coverage, shape = Parameter, color = Parameter)) +
geom_point(size = 5) +
geom_hline(yintercept = 0.95, linetype = "dashed", color = "black") +
labs(x = "", y = "95% C.I. Coverage") +
scale_shape_manual(values = c(1, 2, 15, 4), labels = greek_labels) +
scale_color_manual(values = c("blue", "brown", "red", "purple"), labels = greek_labels) +
scale_y_continuous(limits = c(0.87, 1.0)) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = SIZE_text.x),
axis.text.y = element_text(size = SIZE_text.y),
legend.position = "none"
)
##############################################################################
# Combine the plots side by side
combined_plot <- plot_bias1 + plot_mse1 + plot_95cover1 + plot_bias2 + plot_mse2 +  plot_95cover2 + plot_layout(nrow = 2, ncol = 3)
# Store figure in .png file
ggsave("../../Output/Figure_Table/Maintext_Figure3.png", plot = combined_plot, width = 16, height = 8, dpi = 300)
rm(list=ls())
library(xlsx) ; library(gplots)
#############################
# Load IPD-only analysis results
load("../../Output/Application_Study/IPDonly_Posterior.RData")
PostMean_IPD = apply(posterior_mu,2,mean)
L95_IPD = U95_IPD = rep(0,7)
for (j in 1:7){
L95_IPD[j] = quantile(posterior_mu[,j],prob=0.025)
U95_IPD[j] = quantile(posterior_mu[,j],prob=0.975)
}
ipd.x <- posterior_mu[,6]-posterior_mu[,5]
ipd.y <- posterior_mu[,6]-posterior_mu[,7]
dens.ipd.x <- density(ipd.x)
dens.ipd.y <- density(ipd.y)
ProbComparison = rep(0,3)
ProbComparison[1] = mean( posterior_mu[,6] > posterior_mu[,5] )
ProbComparison[2] = mean( posterior_mu[,6] > posterior_mu[,7] )
ProbComparison[3] = mean( ( posterior_mu[,6] > posterior_mu[,5] ) & ( posterior_mu[,6] > posterior_mu[,7] ) )
ProbComparison # [1] 0.6107 0.5619 0.4468
#############################
# Load IPD-AD integrated analysis results
load("../../Output/Application_Study/IPD_AD_Posterior.RData")
PostMean_IPD_AD = apply(posterior_mu,2,mean)
L95_IPD_AD = U95_IPD_AD = rep(0,7)
for (j in 1:7){
L95_IPD_AD[j] = quantile(posterior_mu[,j],prob=0.025)
U95_IPD_AD[j] = quantile(posterior_mu[,j],prob=0.975)
}
ipd_ad.x <- posterior_mu[,6]-posterior_mu[,5]
ipd_ad.y <- posterior_mu[,6]-posterior_mu[,7]
dens.ipd_ad.x <- density(ipd_ad.x)
dens.ipd_ad.y <- density(ipd_ad.y)
ProbComparison = rep(0,3)
ProbComparison[1] = mean( posterior_mu[,6] > posterior_mu[,5] )  # normal to overweight
ProbComparison[2] = mean( posterior_mu[,6] > posterior_mu[,7] )  # obese to overweight
ProbComparison[3] = mean( ( posterior_mu[,6] > posterior_mu[,5] ) & ( posterior_mu[,6] > posterior_mu[,7] ) )
ProbComparison # [1] 0.9470 0.9374 0.9090
#############################
# Load fixed-effect analysis results
FixedResult = read.xlsx(file="../../Output/Application_Study/FixedEffect.xlsx", sheetName="Sheet1")
row.names(FixedResult) = FixedResult[,1] ; FixedResult = FixedResult[,2:4]
#############################
# Figure 4 of the main text
png(file=paste0("../../Output/Figure_Table/Maintext_Figure4.png"),width=2000,height=800,pointsize=9,res=400)
PlusMinus = 0.45
par(mfrow=c(1,1),family="AppleGothic",mgp = c(2, 0.5, 0),mai=c(0.45,1,0.1,0.2)) # b l t r
plot(c(-1.4, 0.2), c(0, 6), type = "n", xlab = "Weight Gain Reduction (kg)", ylab = "", xaxt = "n", yaxt = "n", bty = "n")
box()
segments(L95_IPD[5:7], c(5,3,1)+PlusMinus, U95_IPD[5:7], c(5,3,1)+PlusMinus, lty = "dashed", col="blue",lwd=1.2) # IPD-only
segments(L95_IPD_AD[5:7], c(5,3,1), U95_IPD_AD[5:7], c(5,3,1), col="red",lwd=1.2)  # IPD-AD
segments(FixedResult[,"X95.cr.l"], c(5,3,1)-PlusMinus, FixedResult[,"X95.cr.r"], c(5,3,1)-PlusMinus, lty = "dotted", col="brown",lwd=1.2)  # Fixed effect model
# Add points for effect sizes
points(PostMean_IPD[5:7], c(5,3,1)+PlusMinus, pch = 17, cex=0.9, col="blue") # IPD-only
points(PostMean_IPD_AD[5:7], c(5,3,1), pch = 20, cex=1.2, col="red") # IPD-AD
points(FixedResult[,"Est"], c(5,3,1)-PlusMinus, pch = 15, cex=1, col="brown") # Fixed effect model
abline(v = 0, lty = "dotted", col="gray")  # Add a vertical line at effect size = 0
axis(side = 1, at = seq(-1.6,0.4, by = 0.4), las = 1, cex.axis=0.8) # Add axes
axis(side = 2, at = c(5,3,1), cex.axis = 1, labels=c(expression( BMI < 25),expression(paste(25 <=  BM, "",I < 30)),expression(BMI >= 30)), las=1) # Add axes
dev.off()
# Figure 5 of the main text
png(file=paste0("../../Output/Figure_Table/Maintext_Figure5.png"),width=2000,height=900,pointsize=10,res=400)
par(mfrow=c(1,2), mgp = c(2, 0.5, 0), mai=c(0.5,0.6,0.1,0.1), cex.lab=1.1) # b l t r
NBINS = 31
# IPD-only result
ci2d( ipd.x, ipd.y, nbins=rep(NBINS,2), method="bkde2D", factor=1.0, ci.levels=c(0.50,0.75,0.85,0.90,0.95), show.points=FALSE, show = "contour", range.x=list(c(-2,2), c(-2,2)), col = "blue", xlab = expression(E(theta[l32])-E(theta[l31])), ylab = expression(E(theta[l32])-E(theta[l33])), pch=par("pch") )
abline(h=0, v=0, lty="dotted", col="gray",lwd=1)
par(new = TRUE)
plot(dens.ipd.x$x, dens.ipd.x$y - 2, type = "l",  xlim=c(-2,2),ylim=c(-2,2) , xlab = "", ylab = "",xaxt='n',yaxt='n')
par(new = TRUE)
plot(-dens.ipd.y$y + 2, dens.ipd.y$x , type = "l",  xlim=c(-2,2),ylim=c(-2,2) , xlab = "", ylab = "",xaxt='n',yaxt='n')
# IPD-AD result
par(mai=c(0.5,0.5,0.1,0.1), cex.lab=1.1) # b l t r
ci2d(ipd_ad.x, ipd_ad.y, nbins=rep(NBINS,2), method="bkde2D", factor=1.0, ci.levels=c(0.50,0.75,0.85,0.90,0.95), show.points=FALSE, show = "contour",  range.x=list(c(-2,2), c(-2,2)), col = "red", xlab =expression(E(theta[l32])-E(theta[l31])), ylab = "", pch=par("pch"))
abline(h=0, v=0, lty="dotted", col="gray",lwd=1)
par(new = TRUE)
plot(dens.ipd_ad.x$x, dens.ipd_ad.x$y - 2, type = "l",  xlim=c(-2,2),ylim=c(-2,2) , xlab = "", ylab = "", xaxt='n',yaxt='n')
par(new = TRUE)
plot(-dens.ipd_ad.y$y + 2, dens.ipd_ad.y$x , type = "l",  xlim=c(-2,2),ylim=c(-2,2) , xlab = "", ylab = "",xaxt='n',yaxt='n')
dev.off()
